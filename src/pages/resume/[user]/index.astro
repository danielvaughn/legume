---
import SkillDetails from "../../../components/SkillDetails.astro";
import UserHeader from "../../../components/UserHeader.astro";
import resume from "../../../data/danielvaughn.yaml";
import Layout from "../../../layouts/Layout.astro";
import { formatDateRange } from "../../../utils/format";

const hasSkills = Boolean(Object.keys(resume.bio.skills).length);

const { user } = Astro.params;
---

<Layout title="Welcome to Astro.">
  <UserHeader bio={resume.bio} />
  <main class="max-w-3xl mx-auto px-5 pb-12 md:px-0">
    {hasSkills && <SkillDetails bio={resume.bio} />}

    <section class="mt-6">
      <header class="border-black border-b-2 pb-1">
        <h2 class="uppercase font-bold tracking-wide select-none">
          Experience
        </h2>
      </header>

      {
        resume.jobs.map((job: any) => {
          const dates = formatDateRange(
            job.start_month,
            job.start_year,
            job.end_month || null,
            job.end_year || null
          );

          return (
            <article class="mt-4">
              <header class="font-bold sm:flex flex-wrap items-baseline justify-between leading-tight sm:leading-normal">
                <span class="sm:flex items-baseline">
                  <h3 class="whitespace-nowrap">
                    {!!job.post && (
                      <a
                        href={`${user}/${job.post}`}
                        class="hover:text-blue-700 hover:underline dark:hover:text-blue-500"
                      >
                        {job.role}
                      </a>
                    )}
                    {!job.post && job.role}
                  </h3>
                  <span class="px-1 text-neutral-400 hidden sm:block">|</span>
                  {job.company_href !== "" && (
                    <a
                      class="whitespace-nowrap cursor-pointer hover:text-blue-700 hover:underline dark:hover:text-blue-500"
                      href={job.company_url}
                      target="_blank"
                    >
                      {job.company_name}
                    </a>
                  )}
                  {!Boolean(job.company_url) && (
                    <span class="whitespace-nowrap select-none">
                      {job.company_name}
                    </span>
                  )}
                </span>
                <span class="whitespace-nowrap block select-none">{dates}</span>
              </header>

              <ul class="list-disc pl-6 mt-1 highlights leading-tight">
                {job.highlights.map((highlight: any) => {
                  const skillList = highlight.skills.join(", ");

                  if (highlight.post) {
                    return (
                      <li class="marker:text-blue-600 my-1">
                        <a
                          href={`${user}/${highlight.post}`}
                          class="hover:text-blue-700 hover:underline"
                        >
                          {highlight.title}
                        </a>
                        {skillList !== "" && (
                          <span class="skills flex items-baseline text-sm text-neutral-600 italic mb-1">
                            ({skillList})
                          </span>
                        )}
                      </li>
                    );
                  }

                  return (
                    <li class="my-1">
                      {highlight.title}
                      {skillList !== "" && (
                        <span class="skills flex items-baseline text-sm text-neutral-600 italic mb-1">
                          ({skillList})
                        </span>
                      )}
                    </li>
                  );
                })}
              </ul>
            </article>
          );
        })
      }
    </section>

    <section class="mt-6">
      <h2
        class="uppercase font-bold border-black border-b-2 tracking-wide select-none"
      >
        Education
      </h2>

      {
        resume.education.map((edu: any) => {
          return (
            <article class="mt-5 font-bold flex flex-wrap items-baseline justify-between">
              <span class="flex items-baseline">
                <span class="whitespace-nowrap">{edu.degree}</span>
                <span class="px-1 text-neutral-400">|</span>
                <h3 class="whitespace-nowrap">{edu.institution}</h3>
              </span>
              <span class="whitespace-nowrap">Sept 2004 - Sept 2008</span>
            </article>
          );
        })
      }
    </section>
  </main>
</Layout>
